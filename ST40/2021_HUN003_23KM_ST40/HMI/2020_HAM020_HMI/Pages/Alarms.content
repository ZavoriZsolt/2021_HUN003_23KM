<div id="Main_3" data-tchmi-type="TcHmi.Controls.System.TcHmiContent" data-tchmi-top="0" data-tchmi-left="0" data-tchmi-width="1500" data-tchmi-height="845" data-tchmi-left-unit="px" data-tchmi-top-unit="px" data-tchmi-width-unit="px" data-tchmi-height-unit="px">

<div id="TcHmiEventGrid_2" data-tchmi-type="TcHmi.Controls.Beckhoff.TcHmiEventGrid" data-tchmi-height="685" data-tchmi-height-unit="px" data-tchmi-left="0" data-tchmi-left-unit="px" data-tchmi-show-menu-bar="True" data-tchmi-top="55" data-tchmi-top-unit="px" data-tchmi-width-unit="px" data-tchmi-width="1500" data-tchmi-is-enabled="True">
<script data-tchmi-target-attribute="data-tchmi-filter" type="application/json">
[
  {
    "path": "domain",
    "comparator": "==",
    "value": "TcHmiEventLogger"
  }
]
</script>
<script data-tchmi-target-attribute="data-tchmi-columns" type="application/json">
[
  {
    "columnName": "type"
  },
  {
    "columnName": "severity"
  },
  {
    "columnName": "timeAndDateRaised"
  },
  {
    "columnName": "text",
    "width": 900,
    "widthUnit": "px"
  },
  {
    "columnName": "timeAndDateConfirmed"
  },
  {
    "columnName": "timeAndDateCleared"
  }
]
</script>







</div>

<div id="TcHmiToggleButtonAll" data-tchmi-type="TcHmi.Controls.Beckhoff.TcHmiToggleButton" data-tchmi-height="50" data-tchmi-height-unit="px" data-tchmi-left="747" data-tchmi-left-unit="px" data-tchmi-text="%l%ButtonAll%/l%" data-tchmi-top="759" data-tchmi-top-unit="px" data-tchmi-width="100" data-tchmi-width-unit="px" data-tchmi-word-wrap="True" data-tchmi-toggle-group="ShowAlarms" data-tchmi-toggle-state="Active">




<script data-tchmi-target-attribute="data-tchmi-trigger" type="application/json">[
  {
    "event": "TcHmiToggleButtonAll.onToggleStateChanged",
    "actions": [
      {
        "objectType": "Condition",
        "active": true,
        "asyncWait": true,
        "parts": [
          {
            "if": [
              {
                "compare1": {
                  "objectType": "Symbol",
                  "symbolExpression": "%ctrl%TcHmiToggleButtonAll::ToggleState%/ctrl%"
                },
                "compare2": {
                  "objectType": "StaticValue",
                  "valueType": "tchmi:framework#/definitions/ToggleState",
                  "value": "Active"
                },
                "compareOperator": "==",
                "logic": null
              }
            ],
            "then": [
              {
                "objectType": "WriteToSymbol",
                "active": true,
                "symbolExpression": "%ctrl%TcHmiEventGrid_2::Filter%/ctrl%",
                "valueType": "tchmi:server#/definitions/eventFilter",
                "value": {
                  "objectType": "StaticValue",
                  "valueType": "tchmi:server#/definitions/eventFilter",
                  "value": [
                    {
                      "path": "domain",
                      "comparator": "==",
                      "value": "TcHmiEventLogger"
                    }
                  ]
                },
                "asyncWait": true
              }
            ]
          }
        ]
      }
    ]
  }
]</script>








</div>

<div id="TcHmiToggleButtonActive" data-tchmi-type="TcHmi.Controls.Beckhoff.TcHmiToggleButton" data-tchmi-height="50" data-tchmi-height-unit="px" data-tchmi-left="626" data-tchmi-left-unit="px" data-tchmi-text="%l%ButtonActive%/l%" data-tchmi-top="759" data-tchmi-top-unit="px" data-tchmi-width="100" data-tchmi-width-unit="px" data-tchmi-word-wrap="True" data-tchmi-toggle-group="ShowAlarms" data-tchmi-toggle-state="Normal">




<script data-tchmi-target-attribute="data-tchmi-trigger" type="application/json">[
  {
    "event": "TcHmiToggleButtonActive.onToggleStateChanged",
    "actions": [
      {
        "objectType": "Condition",
        "active": true,
        "asyncWait": true,
        "parts": [
          {
            "if": [
              {
                "compare1": {
                  "objectType": "Symbol",
                  "symbolExpression": "%ctrl%TcHmiToggleButtonActive::ToggleState%/ctrl%"
                },
                "compare2": {
                  "objectType": "StaticValue",
                  "valueType": "tchmi:framework#/definitions/ToggleState",
                  "value": "Active"
                },
                "compareOperator": "==",
                "logic": null
              }
            ],
            "then": [
              {
                "objectType": "WriteToSymbol",
                "active": true,
                "symbolExpression": "%ctrl%TcHmiEventGrid_2::Filter%/ctrl%",
                "valueType": "tchmi:server#/definitions/eventFilter",
                "value": {
                  "objectType": "StaticValue",
                  "valueType": "tchmi:server#/definitions/eventFilter",
                  "value": [
                    {
                      "path": "domain",
                      "comparator": "==",
                      "value": "TcHmiEventLogger"
                    },
                    {
                      "logic": "AND"
                    },
                    {
                      "path": "confirmationState",
                      "comparator": "==",
                      "value": 2
                    },
                    {
                      "logic": "AND"
                    },
                    {
                      "path": "severity",
                      "comparator": "==",
                      "value": 3
                    }
                  ]
                },
                "asyncWait": true
              }
            ]
          }
        ]
      }
    ]
  }
]</script>


</div>

<div id="ContentName_1" data-tchmi-type="TcHmi.Controls.Beckhoff.TcHmiTextblock" data-tchmi-height="30" data-tchmi-height-unit="px" data-tchmi-left="250" data-tchmi-left-unit="px" data-tchmi-text="%l%PageAlarms%/l%" data-tchmi-top="10" data-tchmi-top-unit="px" data-tchmi-width="1000" data-tchmi-width-unit="px" data-tchmi-word-wrap="True" data-tchmi-text-horizontal-alignment="Center" data-tchmi-is-enabled="True" data-tchmi-text-font-style="Normal" data-tchmi-text-font-weight="Bold">




<script data-tchmi-target-attribute="data-tchmi-border-width" type="application/json">
{
  "left": 0,
  "right": 0,
  "top": 0,
  "bottom": 0,
  "leftUnit": "px",
  "rightUnit": "px",
  "topUnit": "px",
  "bottomUnit": "px"
}
</script>
</div>

</div>