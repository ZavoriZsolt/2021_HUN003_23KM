<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.10">
  <POU Name="P1_Camera" Id="{34762149-00dc-4394-ac04-664d8169154b}" SpecialFunc="None">
    <Declaration><![CDATA[PROGRAM P1_Camera
VAR
		stPos					:ST_PosData;
		tCycleTime				:TON;
		i						:INT;
		tPalletStartTime		:TON;
		nCycle_Idx				:BYTE;
		arrMES_Temp				:ARRAY [0..2] OF ST_P1MesData;
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[(*Időzítők***************************************************)
IF (stPos.nState>10000) AND (stPos.nState<100000) AND NOT tCycleTime.Q THEN
	stPos.nCycleTime := TIME_TO_REAL(tCycleTime.ET)/1000;
END_IF
tCycleTime(IN:= (stPos.nState>10000) AND (stPos.nState<150000), PT:= T#200S);							// A palettára várakozás nincs beszámolva
tPalletStartTime(IN:= NOT i_bP2PalletSensor AND fbConveyor_1.bMotorOn, PT:= T#4S);					// Alaphelyzet felvétel késleltetése!

(*Triggerek**************************************************)

(*Vész rendszer**********************************************)
IF	(NOT (i_bEmyOK AND fbDoor.bDoorsLocked) AND stPos.nState > 0) OR									// Nincs vészkör, vagy
	(NOT i_bDoorOK AND (stPos.nState>=60 AND stPos.nState<=1000)) OR									// alaphelyzetfelvétel közbe megszűnik az ajtókör vagy
	(NOT i_bDoorOK AND (stPos.nState>=10060 AND stPos.nState<=100060)) THEN							// folyamat közbe megszűnik az ajtókör 
		stPos.nState := 0;
END_IF;

(*Hibakezelés************************************************)
IF stPos.nState > 0 AND stPos.nState < 150000 THEN
	stPos.nStateLast := stPos.nState;
	IF	fbP1Lift.bError OR
		fbP1PalletDataExchange.bError OR
		(fbP1AxisX.bError AND i_bDoorOK (*AND stP1.nState >= 500*)) OR
		(fbP1AxisY.bError AND i_bDoorOK (*AND stP1.nState >= 500*)) OR
		(fbP1AxisZ.bError AND i_bDoorOK (*AND stP1.nState >= 500*)) OR
		stPos.bError THEN
			stPos.nState := 200000;
	END_IF
END_IF

(*Engedélyek *************************************************)
IF stPos.nState <= 10000
	OR stPos.nState = 100000
	OR stPos.nState = 150000
	OR stPos.nState >= 200000
THEN
	stPos.bManualModeEnable := TRUE;
ELSE
	stPos.bManualModeEnable := FALSE;
END_IF

IF stPos.nState = 0
	OR stPos.nState = 10000
	OR stPos.nState = 100000
	OR stPos.nState = 150000
	OR stPos.nState >= 200000
THEN
	stPos.bDoorOpenEnable := TRUE;
ELSE
	stPos.bDoorOpenEnable := FALSE;
END_IF

(*Kézi üzem *************************************************)
IF bManualMode THEN
	stPos.nState := 150000;
END_IF

(*Automata üzem *********************************************)
CASE stPos.nState OF
{region "Init process"}
	0:		stPos.sState := CONCAT(UDINT_TO_STRING(stPos.nState) ,' - Vészkör vagy ajtókör bontva - Működtetések törlése');
			fbP1AxisX.bGoPosition := FALSE;
			fbP1AxisY.bGoPosition := FALSE;
			fbP1AxisZ.bGoPosition := FALSE;
			fbP1Lift.bBasePosCmd := TRUE;
			fbP1Lift.bWorkPosCmd := FALSE;
			fbP1PalletDataExchange.eCommand := NoCmd;
			stPos.bError := FALSE;
			stPos.nErrorCode := 0;
			IF i_bDoorOK THEN
				IF bStepEnable THEN
					stPos.nState := stPos.nState + 20;
				END_IF
			END_IF
			
	20:		stPos.sState := CONCAT(UDINT_TO_STRING(stPos.nState) ,' - Alaphelyzetfelvétel - Kiemelő alaphelyzetbe');
			fbP1Lift.bBasePosCmd := TRUE;
			fbP1Lift.bWorkPosCmd := FALSE;
			IF fbP1Lift.bBasePosStab THEN
				IF bStepEnable THEN
					stPos.nState := stPos.nState + 20;
				END_IF
			END_IF
			
	40:		stPos.sState := CONCAT(UDINT_TO_STRING(stPos.nState) ,' - AX5805 safety ellenőrzés');	
			IF (i_bAX5805ErrorX OR i_bAX5805ErrorX) AND NOT q_bAX5805_Ack THEN
				q_bAX5805_Ack := TRUE;
			ELSIF NOT (i_bAX5805ErrorX OR i_bAX5805ErrorY OR i_bAX5805ErrorZ) THEN
				q_bAX5805_Ack := FALSE;
				IF bStepEnable THEN
					stPos.nState := stPos.nState + 20;
				END_IF
			END_IF

	60:		stPos.sState := CONCAT(UDINT_TO_STRING(stPos.nState) ,' - Szervo X tengely drive ellenőrzés');	
			IF NOT fbP1AxisX.Axis.Status.DriveDeviceError THEN
				IF bStepEnable THEN
					stPos.nState := stPos.nState + 20;
				END_IF
			END_IF

	80:		stPos.sState := CONCAT(UDINT_TO_STRING(stPos.nState) ,' - Szervo X tengely NC ellenőrzés');	
			IF NOT fbP1AxisX.Axis.Status.Error THEN
				IF bStepEnable THEN
					stPos.nState := stPos.nState + 20;
				END_IF
			END_IF

	100:	stPos.sState := CONCAT(UDINT_TO_STRING(stPos.nState) ,' - Szervo X tengely ellenőrzés');	
			IF fbP1AxisX.nState = 1000 THEN
				IF bStepEnable THEN
					stPos.nState := stPos.nState + 20;
				END_IF
			END_IF
			
	120:	stPos.sState := CONCAT(UDINT_TO_STRING(stPos.nState) ,' - Szervo Y tengely drive ellenőrzés');	
			IF NOT fbP1AxisY.Axis.Status.DriveDeviceError THEN
				IF bStepEnable THEN
					stPos.nState := stPos.nState + 20;
				END_IF
			END_IF

	140:	stPos.sState := CONCAT(UDINT_TO_STRING(stPos.nState) ,' - Szervo Y tengely NC ellenőrzés');	
			IF NOT fbP1AxisY.Axis.Status.Error THEN
				IF bStepEnable THEN
					stPos.nState := stPos.nState + 20;
				END_IF
			END_IF

	160:	stPos.sState := CONCAT(UDINT_TO_STRING(stPos.nState) ,' - Szervo Y tengely ellenőrzés');	
			IF fbP1AxisY.nState = 1000 THEN
				IF bStepEnable THEN
					stPos.nState := stPos.nState + 20;
				END_IF
			END_IF

	180:	stPos.sState := CONCAT(UDINT_TO_STRING(stPos.nState) ,' - Szervo Z tengely drive ellenőrzés');	
			IF NOT fbP1AxisZ.Axis.Status.DriveDeviceError THEN
				IF bStepEnable THEN
					stPos.nState := stPos.nState + 20;
				END_IF
			END_IF

	200:	stPos.sState := CONCAT(UDINT_TO_STRING(stPos.nState) ,' - Szervo Z tengely NC ellenőrzés');	
			IF NOT fbP1AxisZ.Axis.Status.Error THEN
				IF bStepEnable THEN
					stPos.nState := stPos.nState + 20;
				END_IF
			END_IF

	220:	stPos.sState := CONCAT(UDINT_TO_STRING(stPos.nState) ,' - Szervo Z tengely ellenőrzés');	
			IF fbP1AxisZ.nState = 1000 THEN
				IF bStepEnable THEN
					stPos.nState := 500;
				END_IF
			END_IF
	 
			
	500:	stPos.sState := CONCAT(UDINT_TO_STRING(stPos.nState) ,' - Z tengely alaphelyzetbe mozgatása');			
			fbP1AxisZ.rPosition1 := 0;
			fbP1AxisZ.rVelocity1 := 100;
			fbP1AxisZ.bGoPosition := TRUE;
			IF fbP1AxisZ.bDone THEN
				IF bStepEnable THEN
					fbP1AxisZ.bGoPosition := FALSE;
					stPos.nState := stPos.nState + 20;
				END_IF
			END_IF
			
	520:	stPos.sState := CONCAT(UDINT_TO_STRING(stPos.nState) ,' - X tengely alaphelyzetbe mozgatása');			
			fbP1AxisX.rPosition1 := 0;
			fbP1AxisX.rVelocity1 := 100;
			fbP1AxisX.bGoPosition := TRUE;
			IF fbP1AxisX.bDone THEN
				IF bStepEnable THEN
					fbP1AxisX.bGoPosition := FALSE;
					stPos.nState := stPos.nState + 20;
				END_IF
			END_IF
			
	540:	stPos.sState := CONCAT(UDINT_TO_STRING(stPos.nState) ,' - Y tengely alaphelyzetbe mozgatása');			
			fbP1AxisY.rPosition1 := 0;
			fbP1AxisY.rVelocity1 := 100;
			fbP1AxisY.bGoPosition := TRUE;
			IF fbP1AxisY.bDone THEN
				IF bStepEnable THEN
					fbP1AxisY.bGoPosition := FALSE;
					stPos.nState := stPos.nState + 20;
				END_IF
			END_IF
					 
	560:	stPos.sState := CONCAT(UDINT_TO_STRING(stPos.nState) ,' - Várakozás paletta mozgásra a pzíciók között');
			IF tPalletStartTime.Q THEN									// Normál esetben nem kerülhet ebbe az állapotba a berendezés!
				IF bStepEnable THEN										// Ha viszont P1 elengedi a palettát, amin jó termék van, és az még nem érkezik meg P2-be
					stPos.nState := 10000;								// a következő paletta ami üres megérkezik P1-be, ekkor nyomnak egy vészstopot, kinyitják az ajtót és visszahúzzák
				END_IF													// a palettát P2 elől, akkor induláskor P1 rögtön elengedné az üres palettát igy P2-be 2 paletta érkezne!!!!
			END_IF														// Ebből a hibából automatikusan csak selejtezéssel lehetne kiszedni az állomást!!! Ez nem lenne túl szerencsés!!

{endregion}
			
(* Alaphelyzet *********************************************************************)
	10000:	stPos.sState := CONCAT(UDINT_TO_STRING(stPos.nState) ,' - Alaphelyzet, termékre vár');
			IF fbP1RFID.bTagPresent AND fbP1Stopper.bPalletAtStopper AND NOT bP1ScrapRepeatError THEN
				IF bStepEnable THEN
					stPos.nState := stPos.nState + 20;
				END_IF
			END_IF	

{region "Pallet receive"}
	(*-----=== Hordozólap adatok lekérdezése ST10-től ===-----*)
	10020:	stPos.sState := CONCAT(UDINT_TO_STRING(stPos.nState) ,' - Paletta adatok lekérdezése');
			fbP1PalletDataExchange.nIndex := fbP1RFID.nTAGData;
			IF bStepEnable THEN
				fbP1PalletDataExchange.eCommand := Read;
				stPos.nState := stPos.nState + 20;
			END_IF
			
	(*-----=== Hordozólap adatok lekérdezése ST10-től ===-----*)
	10040:	stPos.sState := CONCAT(UDINT_TO_STRING(stPos.nState) ,' - Paletta adatok lekérdezése');
			IF fbP1PalletDataExchange.bDone AND NOT fbP1PalletDataExchange.bError THEN
				IF bStepEnable THEN
					fbP1PalletDataExchange.eCommand := NoCmd;
					stPos.nState := stPos.nState + 20;
				END_IF
			END_IF

	(*-----=== Hordozólap adatok kiértékelése ===-----*)
	10060:	stPos.sState := CONCAT(UDINT_TO_STRING(stPos.nState) ,' - Paletta adatok lekérdezése');
			IF		stP1PalletData.nPalletState = 2 AND			// OK termék a palettán
					stP1PalletData.nDone.3 AND					// Diszpenzálás kész
					NOT stP1PalletData.nDone.4 THEN				// Kamerás ell. még nincs kész
						IF bStepEnable THEN						// Mehet a kiemelés -> Normál folyamat
							nCycle_Idx := 0;

							arrMES_Temp[0].nOP_Index := nP1GapFillerCheckCover_Index;
							arrMES_Temp[0].sDMC_Code := stP1PalletData.sCoverCode;
							arrMES_Temp[0].sOP_Name := 'OP_GAP_FILLER_CHK_COVER';
							
							arrMES_Temp[1].nOP_Index := nP1CheckSim_Index;
							arrMES_Temp[1].sDMC_Code := stP1PalletData.sMRTCode;
							arrMES_Temp[1].sOP_Name := 'OP_CHECK_SIM';
	
							arrMES_Temp[2].nOP_Index := nP1CheckComponent_Index;
							arrMES_Temp[2].sDMC_Code := stP1PalletData.sMRTCode;
							arrMES_Temp[2].sOP_Name := 'OP_CHECK_COMPONENT';
	
							stPos.nState := stPos.nState + 20;
						END_IF
			ELSIF	stP1PalletData.nPalletState = 41 THEN		// Teszt hordozólap a kamerához
						IF bStepEnable THEN						// Még nincs funkció -> Tovább engedés
							stPos.nState := 96060; //????
						END_IF
			ELSIF	stP1PalletData.nPalletState = 2 AND			// OK termék a palettán
					NOT stP1PalletData.nDone.3 THEN				// Diszpenzálás nincs kész !
						IF bStepEnable THEN						// Átemelt hordozólap!?!? -> Selejtezés
							stP1PalletData.nPalletState := 1;
							stP1PalletData.nDone.4	:= TRUE;
							stP1PalletData.nErrorCode := 4100;
							stPos.nState := 96000;
						END_IF
			ELSIF	stP1PalletData.nPalletState = 1 THEN		// Selejt termék a palettán
						IF bStepEnable THEN						// Nincs kiemelés -> Tovább engedés
							stPos.nState := 96060;
						END_IF
			ELSIF	stP1PalletData.nPalletState = 0 THEN		// Üres paletta
						IF bStepEnable THEN						// Nincs kiemelés -> Tovább engedés
							stPos.nState := 96060;
						END_IF
			ELSE												// Nincs teendő, más állomásnak szánt hordozólap
						IF bStepEnable THEN						// Nincs kiemelés -> Tovább engedés
							stPos.nState := 96060;
						END_IF			
			END_IF

	(*-----=== MES engedély ellenőrzése ===-----*)
	10080:	stPos.sState := CONCAT(UDINT_TO_STRING(stPos.nState) ,' - MES engedély ellenőrzése');
			IF bMesEnable THEN
				IF bStepEnable THEN
					stPos.nState := 14000;
				END_IF
			ELSE
				IF bStepEnable THEN
					stPos.nState := 16000;
				END_IF				
			END_IF
{endregion}

{region "Normal process"} 
(*-----=== Recept lista kezelés ===-----*)
(* Get MRT OP state *)
14000:		stPos.sState := CONCAT(UDINT_TO_STRING(stPos.nState) ,' - Get OP state MRT (1026)');
			IF fbP1MesInterface.GET_CURRENT_OPERATION_STATE(stP1PalletData.sMRTCode, 0,stP1MesOpState) THEN
				IF stP1MesResp.RESP_CODE = '0' or stP1MesResp.RESP_CODE = '377'	THEN									// MRT OP state OK
					IF bStepEnable THEN
						stP1MrtMaterial.MATERIAL := stP1MesOpState.MAT_NO;
						stP1MrtMaterial.REVISION := stP1MesOpState.REVISION;
						nCycle_Idx := 0;
						stPos.nState := 14100;
					END_IF		
				ELSE
					IF bStepEnable THEN													// Get OP state hiba
						stP1PalletData.nPalletState := 1;
						stP1PalletData.nDone.4	:= TRUE;
							stP1PalletData.nErrorCode := 4101;
						stPos.nState := 96000;
					END_IF
				END_IF
			END_IF

	 
14100:		stPos.sState := CONCAT(UDINT_TO_STRING(stPos.nState) ,' - Get Material Custom Data (1037)');
			IF fbP1MesInterface.GET_MAT_CUSTOM_DATA(stP1MrtMaterial, 0) THEN
				IF stP1MesResp.RESP_CODE = '0'	THEN									// Get Custom Data OK
					IF bStepEnable THEN
						stPos.nState := stPos.nState + 20;
					END_IF		
				ELSE
					IF bStepEnable THEN													// Get Custom Data hiba
						stP1PalletData.nPalletState := 1;
						stP1PalletData.nDone.4	:= TRUE;
							stP1PalletData.nErrorCode := (4102 + nCycle_Idx);
						stPos.nState := 96000;
					END_IF
				END_IF
			END_IF		  

14120:		stPos.sState := CONCAT(UDINT_TO_STRING(stPos.nState) ,' - Get Custom Data By Key');
			IF fbP1MesInterface.GET_CUSTOM_DATA_BY_KEY(CONCAT(arrMES_Temp[nCycle_Idx].sOP_Name, '_R'), arrMES_Temp[nCycle_Idx].sOP_CustomData) THEN
				IF arrMES_Temp[nCycle_Idx].sOP_CustomData <> ''	THEN					// Get Custom Data by key OK
					IF bStepEnable THEN
						arrMES_Temp[nCycle_Idx].sOP_ReceipeList := arrMES_Temp[nCycle_Idx].sOP_CustomData;
						stPos.nState := stPos.nState + 20;
					END_IF		
				ELSE
					IF bStepEnable THEN													// Get Custom Data by key hiba
						stP1PalletData.nPalletState := 1;
						stP1PalletData.nDone.4	:= TRUE;
							stP1PalletData.nErrorCode := (4103 + nCycle_Idx);
						stPos.nState := 96000;
					END_IF
				END_IF
			END_IF		  

14140:		stPos.sState := CONCAT(UDINT_TO_STRING(stPos.nState) ,' - Recept lista ellenőrzése');   
			IF nCycle_Idx >= 2 THEN
				IF bStepEnable THEN						// Custom fied-ek átemelve -> Gyí, gyí gyí !!!
					nCycle_Idx := 0;
					stPos.nState := 14200;
				END_IF
			ELSE
				IF bStepEnable THEN
					nCycle_Idx := nCycle_Idx + 1;		// Van még háta Custom fiel -> Mehet a köv. lekérdezés
					stPos.nState := 14100;
				END_IF
			END_IF		

14200:
			stPos.nState := 15000;		

				 
(*-----=== MES 3010 (Start SFC) ===-----*)
	15000:	stPos.sState := CONCAT(UDINT_TO_STRING(stPos.nState) ,' - Start SFC (3010)');
			eP1GapFillerCheck_Result := E_TEST_STATE.PASSED;	
			IF fbP1MesInterface.START_SFC(arrMES_Temp[nCycle_Idx].sDMC_Code, arrMES_Temp[nCycle_Idx].nOP_Index) THEN
				IF stP1MesResp.RESP_CODE = '0'	THEN									// Jó termék
					IF bStepEnable THEN
						stPos.nState := stPos.nState + 20;
					END_IF		
				ELSE
					IF bStepEnable THEN													// Selejt
						stP1PalletData.nPalletState := 1;
						stP1PalletData.nDone.4	:= TRUE;
							stP1PalletData.nErrorCode := 4111 + nCycle_Idx;
						stPos.nState := 96000;
					END_IF
				END_IF
			END_IF

(*			// Custom field olvasása miatt kiesik! A receptlistát előre le kell tölteni! 2021.02.15
	15020:	stP1.sState := CONCAT(UDINT_TO_STRING(stP1.nState) ,' - Get recipe name');	
			IF fbP1MesInterface.GET_RECIPE_NAME_BY_OPERATION_JSON(arrMES_Temp[nCycle_Idx].sOP_Name, sP1RecipeName) THEN
			IF sP1RecipeName <>'' THEN
				stP1.nState := 16000;
			ELSE
				stP1PalletData.nPalletState := 1;							// Nincs recept név, viszont az SFC startolva -> le kell zárni hibával.
				stP1PalletData.nDone.4	:= TRUE;
				stP1PalletData.nErrorCode := 4103;
				eP1GapFillerCheck_Result := E_TEST_STATE.FAILED;
				stP1NcDat.MESDAT[stP1NcDat.N].RESPONSE_CODE := '4103';
				stP1NcDat.MESDAT[stP1NcDat.N].RESPONSE_DESCRIPTION := CONCAT(CONCAT('The ',arrMES_Temp[nCycle_Idx].sOP_Name),' recipe missing');
				stP1NcDat.MESDAT[stP1NcDat.N].CLIENT_DATE := fbP1MesInterface.GET_LOCAL_TIME();
				stP1NcDat.MESDAT[stP1NcDat.N].TEST_STATE := INT_TO_STRING(E_TEST_STATE.FAILED);
				stP1NcDat.MESDAT[stP1NcDat.N].TEST_STEP := INT_TO_STRING(stP1NcDat.N);
				stP1NcDat.MESDAT[stP1NcDat.N].VALUE := '0';
				stP1.nState := 95000;
			END_IF
		END_IF
*)

	15020:	stPos.sState := CONCAT(UDINT_TO_STRING(stPos.nState) ,' - Receptnév átadása');	
			fbP1ReceipeList(
				sReceipeListIn:= arrMES_Temp[nCycle_Idx].sOP_ReceipeList,
				sReceipeListOut=> arrMES_Temp[nCycle_Idx].sOP_ReceipeList,
				sReceipe=> sP1RecipeName,
				bEmpty=> );
			stPos.nState := 16000;

(*-----=== Recept kezelés ===-----*)
	16000:	stPos.sState := CONCAT(UDINT_TO_STRING(stPos.nState) ,' - Recept lista frissítése');
			bP1RecipeRefresh := TRUE;
			IF fbP1RecipeManager.DONE AND fbP1RecipeManager.RECIPE_CNT > 0 THEN
				IF bStepEnable THEN
						bP1RecipeRefresh := FALSE;
						stPos.nState := stPos.nState + 20;
				END_IF
			END_IF

	16020:	stPos.sState := CONCAT(UDINT_TO_STRING(stPos.nState) ,' - Várakozás recept lista frissítés befejezésére');
			IF NOT fbP1RecipeManager.DONE AND NOT fbP1RecipeManager.RESET THEN
				IF bMesEnable THEN
					IF bStepEnable THEN
							stPos.nState := stPos.nState + 20;
					END_IF
				ELSE
					IF bStepEnable THEN
							sP1RecipeName := arrP1RecipeNames[nCycle_Idx + 1];			// Kikapcsolt MES esetén is legyen ellenőrzés 
							stPos.nState := stPos.nState + 20;
					END_IF
				END_IF
			END_IF

	16040:	stPos.sState := CONCAT(UDINT_TO_STRING(stPos.nState) ,' - Recept betöltése');
			bP1RecipeLoad := TRUE;
			IF fbP1RecipeManager.DONE THEN
				IF bStepEnable THEN
						bP1RecipeLoad := FALSE;
						i := 0;
						stP1NcDat.N := 1;
						stPos.nState := stPos.nState + 20;
				END_IF
			END_IF

	16060:	stPos.sState := CONCAT(UDINT_TO_STRING(stPos.nState) ,' - Várakozás recept betöltés befejezésére');
			IF NOT fbP1RecipeManager.DONE AND NOT fbP1RecipeManager.RESET THEN
				IF NOT fbP1RecipeManager.READ_FILE.ERROR THEN
					IF bStepEnable THEN
							stPos.nState := stPos.nState + 20;			// Recept betöltés kész
					END_IF
				ELSE
					stP1PalletData.nPalletState := 1;					// Nincs recept név, viszont az SFC startolva -> le kell zárni hibával.
					stP1PalletData.nDone.4	:= TRUE;
					stP1PalletData.nErrorCode := 4104;
					eP1GapFillerCheck_Result := E_TEST_STATE.FAILED;
					stP1NcDat.MESDAT[stP1NcDat.N].RESPONSE_CODE := '4113';
					stP1NcDat.MESDAT[stP1NcDat.N].RESPONSE_DESCRIPTION := CONCAT(CONCAT('The ',arrMES_Temp[nCycle_Idx].sOP_Name),' recipe not found');
					stP1NcDat.MESDAT[stP1NcDat.N].CLIENT_DATE := fbP1MesInterface.GET_LOCAL_TIME();
					stP1NcDat.MESDAT[stP1NcDat.N].TEST_STATE := INT_TO_STRING(E_TEST_STATE.FAILED);
					stP1NcDat.MESDAT[stP1NcDat.N].TEST_STEP := INT_TO_STRING(stP1NcDat.N);
					stP1NcDat.MESDAT[stP1NcDat.N].VALUE := '0';
					stPos.nState := 95000;
				END_IF
			END_IF

	16080:	stPos.nState := 18000;


(*-----=== Normál folyamat ===-----*)
	18000:	stPos.sState := CONCAT(UDINT_TO_STRING(stPos.nState) ,' - Kiemelő munkahelyzetbe');
			fbP1Lift.bBasePosCmd := FALSE;
			fbP1Lift.bWorkPosCmd := TRUE;
			IF fbP1Lift.bWorkPosStab THEN
				IF bStepEnable THEN
					stPos.nState := stPos.nState + 20;
				END_IF
			END_IF

	18020:	stPos.sState := CONCAT(UDINT_TO_STRING(stPos.nState) ,' - Programlépés betöltése');
			fbP1AxisX.rPosition1 := LREAL_TO_REAL(stP1Recipe.Seq[i].Target.X);
			fbP1AxisX.rVelocity1 := rVelocity;
			fbP1AxisY.rPosition1 := LREAL_TO_REAL(stP1Recipe.Seq[i].Target.Y);
			fbP1AxisY.rVelocity1 := rVelocity;
			fbP1AxisZ.rPosition1 := LREAL_TO_REAL(stP1Recipe.Seq[i].Target.Z);
			fbP1AxisZ.rVelocity1 := rVelocity;
			fbP1Cam1.nProgNr := INT_TO_UINT(stP1Recipe.Seq[i].CheckingProgramId);
			IF bStepEnable THEN
					stPos.nState := stPos.nState + 20;
			END_IF
			
	18040:	stPos.sState := CONCAT(UDINT_TO_STRING(stPos.nState) ,' - X,Y,Z tengely pozícióba mozgatása');						
			fbP1AxisX.bGoPosition := TRUE;
			fbP1AxisY.bGoPosition := TRUE;
			fbP1AxisZ.bGoPosition := TRUE;
			IF fbP1AxisX.bDone AND fbP1AxisY.bDone AND fbP1AxisZ.bDone THEN
				IF bStepEnable THEN
					fbP1AxisX.bGoPosition := FALSE;
					fbP1AxisY.bGoPosition := FALSE;
					fbP1AxisZ.bGoPosition := FALSE;
					stPos.nState := stPos.nState + 20;
				END_IF
			END_IF
			
	18060:	stPos.sState := CONCAT(UDINT_TO_STRING(stPos.nState) ,' - Kamera triggerelése');						
			fbP1Cam1.bStart := TRUE;
			IF NOT fbP1Cam1.bReady AND NOT fbP1Cam1.bBusy THEN			
				IF bStepEnable THEN
					stPos.nState := stPos.nState + 20;
				END_IF
			END_IF
			
	18080:	stPos.sState := CONCAT(UDINT_TO_STRING(stPos.nState) ,' - Kiértékelés');						
			IF	fbP1Cam1.bFail THEN
					fbP1Cam1.bStart := FALSE;
					nP1ScrapCounter := nP1ScrapCounter + 1;
					stP1PalletData.nPalletState := 1;								// Fail -> Hordozólap selejt
					stP1PalletData.nDone.4	:= TRUE;
					stP1PalletData.nErrorCode := INT_TO_WORD(4121 + i);
					eP1GapFillerCheck_Result := E_TEST_STATE.FAILED;
					stP1NcDat.MESDAT[stP1NcDat.N].RESPONSE_CODE := INT_TO_STRING(4121 + i);
					stP1NcDat.MESDAT[stP1NcDat.N].RESPONSE_DESCRIPTION := CONCAT('Camera error of POS#', INT_TO_STRING(i));
					stP1NcDat.MESDAT[stP1NcDat.N].CLIENT_DATE := fbP1MesInterface.GET_LOCAL_TIME();
					stP1NcDat.MESDAT[stP1NcDat.N].TEST_STATE := INT_TO_STRING(E_TEST_STATE.FAILED);
					stP1NcDat.MESDAT[stP1NcDat.N].TEST_STEP := INT_TO_STRING(stP1NcDat.N);
					stP1NcDat.MESDAT[stP1NcDat.N].VALUE := '0';
					stPos.nState := 95000;	
			ELSE
				fbP1Cam1.bStart := FALSE;
				stPos.nState := stPos.nState + 20;
			END_IF

	18100:	stPos.sState := CONCAT(UDINT_TO_STRING(stPos.nState) ,' - Recept kész?');
			IF	stP1Recipe.Seq[i].LastPosition THEN
					IF fbP1ReceipeList.bEmpty THEN
						stPos.nState := 95000;							// A recept kész és ez volt az utolsó a listába
					ELSE
						stPos.nState := 15020;							// A recept kész de nem ez volt az utolsó a listába! -> Új recept betöltése!
					END_IF
			ELSE 
				i := i+1;												// A recept még nincs kész
				stPos.nState := 18020;
			END_IF
	
(*-----=== MES 3503 (Log NC Data) ===-----*)
	95000:	stPos.sState := CONCAT(UDINT_TO_STRING(stPos.nState) ,' - Log NC (3503)');	
			IF stP1PalletData.nPalletState = 1 AND bMesEnable THEN
				IF fbP1MesInterface.ASSY_SAVE_NCDAT(arrMES_Temp[nCycle_Idx].sDMC_Code,arrMES_Temp[nCycle_Idx].nOP_Index,stP1NcDat) THEN
					IF bStepEnable THEN
						stPos.nState := stPos.nState + 20;			// A paletta már selejt és van bent hibakód! Nincs felülírás.
					END_IF							
				END_IF
			ELSE
				IF bStepEnable THEN
					stPos.nState := stPos.nState + 20;
				END_IF
			END_IF

(*-----=== MES 3011 (Complete SFC) ===-----*)
	95020:	stPos.sState := CONCAT(UDINT_TO_STRING(stPos.nState) ,' - Complete SFC (3011)');
			IF bMesEnable THEN	
				IF fbP1MesInterface.COMPLETE_SFC(arrMES_Temp[nCycle_Idx].sDMC_Code, arrMES_Temp[nCycle_Idx].nOP_Index, eP1GapFillerCheck_Result) THEN
					IF stP1MesResp.RESP_CODE='0' THEN
						stPos.nState := stPos.nState + 20;
					ELSE
						stP1PalletData.nPalletState := 1;			// A MES-be aktív marad nem tudom selejtezni! Csak a hordozót selejtezem
						stP1PalletData.nErrorCode := 4114;
						stPos.nState := stPos.nState + 20;
					END_IF
				END_IF
			ELSE
				stPos.nState := stPos.nState + 20;
			END_IF


	95040:	stPos.sState := CONCAT(UDINT_TO_STRING(stPos.nState) ,' - Folyamat ellenőrzése');
			IF stP1PalletData.nPalletState = 1 OR nCycle_Idx >= 2 THEN
				IF bStepEnable THEN						// Selejt vagy kész a folyamat -> Lejelentés
					stP1PalletData.nDone.4 := TRUE;
					stPos.nState := stPos.nState + 20;
				END_IF
			ELSE
				IF bStepEnable THEN
					nCycle_Idx := nCycle_Idx + 1;		// Jó termék és még nincs kész a folyamat -> Mehet a köv. folyamat
					IF bMesEnable THEN
						stPos.nState := 15000;
					ELSE
						stPos.nState := 16000;
					END_IF
				END_IF
			END_IF
			
	95060:		
			stPos.nState := 96000;

	(*-----=== Hordozólap adatok feltöltése ST10-be ===-----*)
	96000:	stPos.sState := CONCAT(UDINT_TO_STRING(stPos.nState) ,' - Paletta adatok feltöltése');
			fbP1PalletDataExchange.nIndex := fbP1RFID.nTAGData;
			IF bStepEnable THEN
				fbP1PalletDataExchange.eCommand := Write;
				stPos.nState := stPos.nState + 20;
			END_IF
			
	(*-----=== Hordozólap adatok feltöltése ST10-be ===-----*)
	96020:	stPos.sState := CONCAT(UDINT_TO_STRING(stPos.nState) ,' - Paletta adatok feltöltése');
			IF fbP1PalletDataExchange.bDone AND NOT fbP1PalletDataExchange.bError THEN
				IF bStepEnable THEN
					fbP1PalletDataExchange.eCommand := NoCmd;
					stPos.nState := stPos.nState + 20;
				END_IF
			END_IF

	96040:	stPos.sState := CONCAT(UDINT_TO_STRING(stPos.nState) ,' - X,Y tengely pozícióba mozgatása');
			fbP1AxisX.rPosition1 := 0;
			fbP1AxisX.rVelocity1 := rVelocity;
			fbP1AxisY.rPosition1 := 0;
			fbP1AxisY.rVelocity1 := rVelocity;					
			fbP1AxisZ.rPosition1 := 0;
			fbP1AxisZ.rVelocity1 := rVelocity;					
			fbP1AxisX.bGoPosition := TRUE;
			fbP1AxisY.bGoPosition := TRUE;
			fbP1AxisZ.bGoPosition := TRUE;
			IF fbP1AxisX.bDone AND fbP1AxisY.bDone AND fbP1AxisZ.bDone THEN
				IF bStepEnable THEN
					fbP1AxisX.bGoPosition := FALSE;
					fbP1AxisY.bGoPosition := FALSE;
					fbP1AxisZ.bGoPosition := FALSE;
					stPos.nState := stPos.nState + 20;
				END_IF
			END_IF		
	
	96060:	stPos.sState := CONCAT(UDINT_TO_STRING(stPos.nState) ,' - Kiemelő alaphelyzetbe');
			fbP1Lift.bBasePosCmd := TRUE;
			fbP1Lift.bWorkPosCmd := FALSE;
			IF fbP1Lift.bBasePosStab THEN
				IF bStepEnable THEN
					i:=0;
					stPos.nState := stPos.nState + 20;	
				END_IF
			END_IF		

	96080:	stPos.sState := CONCAT(UDINT_TO_STRING(stPos.nState) ,' - Ismétlődő hibák ellenőrzése');
			IF NOT bP1ScrapRepeatError THEN
				stPos.nState := 100000;
			END_IF
{endregion}
			
(*-----=== Automata ciklus befejezése ===-----*)
	100000:	stPos.sState := CONCAT(UDINT_TO_STRING(stPos.nState) ,' - Várakozás hordozólap elengedésre');
			IF NOT fbP1Stopper.bPalletAtStopper THEN
				IF bStepEnable THEN
					i:=0;
					stPos.nState := stPos.nState + 20;
				END_IF
			END_IF		

	100020:
			stPos.nState := 10000;	
			
(* Kézi üzem *********************************************************************)
	150000:	stPos.sState := CONCAT(UDINT_TO_STRING(stPos.nState) ,' - Kézi üzem');
			IF NOT bManualMode THEN
				stPos.nState := 0;
			ELSE
				;
			END_IF
			
	(* Hibakezelés *********************************************************************)
	200000:	stPos.sState := CONCAT(UDINT_TO_STRING(stPos.nState) ,CONCAT(' - Hiba, ebből az állapotból: ' ,stPos.sState));
			fbP1PalletDataExchange.eCommand := NoCmd;
			stPos.bError := TRUE;
			stPos.nState := stPos.nState + 20;

	(* Hibakezelés *********************************************************************)
	200020:	IF bAckP THEN
				CASE stPos.nStateLast OF
					(* Alaphelyzet felvétel folyamán *)
					0..9999:	stPos.nState := 0;
				ELSE 			stPos.nState := 0;
				END_CASE
				stPos.bError := FALSE;
			END_IF
ELSE
	stPos.sState := CONCAT(UDINT_TO_STRING(stPos.nState) ,' - Nem használt állapot');
END_CASE
			
			
			]]></ST>
    </Implementation>
    <Action Name="Camera" Id="{1213996c-08f5-4059-aef6-e3e8cd24eabc}">
      <Implementation>
        <ST><![CDATA[fbP1Cam1(
	sName:= 'CAM1 Basler acA4600-7gc', 
	bEn:= TRUE, 
	bEHA:= TRUE, 
	bAck:= bAckP, 
	timConnection:= T#1500MS, 
	timReady:= T#1500MS, 
	timProgChange:= T#1500MS, 
	timProgRun:= T#5S, 
	stCAM_IN:= stCam1_IN,
	stComErrEvent:= TC_EVENTS.MyEvent.fbP1Cam1Com,
	stReadyErrEvent:= TC_EVENTS.MyEvent.fbP1Cam1Ready,
	stProgErrEvent:= TC_EVENTS.MyEvent.fbP1Cam1Prog,
	stRunErrEvent:= TC_EVENTS.MyEvent.fbP1Cam1Run, 
	stCAM_OUT=> stCam1_OUT);
]]></ST>
      </Implementation>
    </Action>
    <Action Name="DataExchange" Id="{7bde8b84-684d-4fde-adc4-5477fe0f4bf1}">
      <Implementation>
        <ST><![CDATA[fbP1PalletDataExchange(
	stPalletData:= stP1PalletData, 
	sName:= 'P1 Camera pos.', 
	bAck:= bAckP, 
	sAMSNetId:= sST10_NetId, 
	stEventEntry:= TC_EVENTS.MyEvent.fbP1PalletDataExchange);]]></ST>
      </Implementation>
    </Action>
    <Action Name="Diag" Id="{af734140-f890-40ad-9f47-5144bf63b61b}">
      <Implementation>
        <ST><![CDATA[fbP1FullCycleTime(
	bPalletSensor:= fbP1Stopper.i_bPalettSensor,
	timTimeMax:= T#200S,
	nCurrentCycleTime=> ,
	arrCycleTimes=> );
]]></ST>
      </Implementation>
    </Action>
    <Action Name="MES" Id="{9fb22461-eca9-41fe-8bdd-472edb2f70f5}">
      <Implementation>
        <ST><![CDATA[fbP1MesInterface(
	HOST:= '127.0.0.1', 
	PORT:= 5500, 
	ENABLE:= TRUE, 
	RESET:= fbP1MesInterface.ERROR, 
	STX:= , 
	ETX:= , 
	RESP:= stP1MesResp, 
	TEST_ADAPTER:= '0', 
	ADAPTER_ID:= '1', 
	BUSY=> , 
	READY=> , 
	DONE=> , 
	ERROR=> , 
	ERROR_ID=> );]]></ST>
      </Implementation>
    </Action>
    <Action Name="Pneu" Id="{f07977e9-c232-4786-bdab-dc615701d97a}">
      <Implementation>
        <ST><![CDATA[fbP1Lift(
	sName:= 'Z4.4', 
	sBasePosSensor:= 'S4131', 
	sWorkPosSensor:= 'S4132', 
	bEn:= i_bDoorOK, 
	bEHA:= bGlobalEHA, 
	bDisableManualCmd:= NOT bManualMode, 
	bAck:= bAckP, 
	timBasePos:= , 
	timWorkPos:= ,
	stBasePosEvent:= TC_Events.MyEvent.fbP1LiftBPE, 
	stWorkPosEvent:= TC_Events.MyEvent.fbP1LiftWPE);]]></ST>
      </Implementation>
    </Action>
    <Action Name="Recipe" Id="{a8df4282-a7c8-4c21-9b23-afeed744d1aa}">
      <Implementation>
        <ST><![CDATA[fbP1RecipeManager(
	sDef:= 'Vision', 
	sExt:= 'tcdata', 
	sFolderPath:= 'C:\TwinCAT\Tc_Data', 
	sKey:= 'Data', 
	pData:= ADR(stP1Recipe), 
	nData:= SIZEOF(stP1Recipe), 
	RESET:= , 
	READY=> , 
	BUSY=> , 
	DONE=> , 
	ERROR=> , 
	ERROR_ID=> , 
	TIME_STAMP=> , 
	RECIPE_LIST=> arrP1RecipeNames, 
	RECIPE_CNT=> );
	
IF	bP1RecipeLoad AND
	NOT bP1RecipeSave AND
	NOT bP1RecipeRefresh AND
	NOT fbP1RecipeManager.RESET AND
	NOT fbP1RecipeManager.DONE THEN
			fbP1RecipeManager.Load(NAME:= sP1RecipeName);
END_IF

IF	NOT bP1RecipeLoad AND
	bP1RecipeSave AND
	NOT bP1RecipeRefresh AND
	NOT fbP1RecipeManager.RESET AND
	NOT fbP1RecipeManager.DONE THEN
			fbP1RecipeManager.Save(NAME:= sP1RecipeName);
END_IF

IF	NOT bP1RecipeLoad AND
	NOT bP1RecipeSave AND
	bP1RecipeRefresh AND
	NOT fbP1RecipeManager.RESET AND
	NOT fbP1RecipeManager.DONE THEN
			fbP1RecipeManager.RefreshNameList();
END_IF

IF	NOT bP1RecipeLoad AND
	NOT bP1RecipeSave AND
	NOT bP1RecipeRefresh AND
	NOT fbP1RecipeManager.RESET AND
	fbP1RecipeManager.DONE THEN
			fbP1RecipeManager.RESET := TRUE;
END_IF

IF	fbP1RecipeManager.RESET AND
	NOT fbP1RecipeManager.DONE THEN
			fbP1RecipeManager.RESET := FALSE;
END_IF
]]></ST>
      </Implementation>
    </Action>
    <Action Name="RFID" Id="{eaabd472-e0b4-47cd-bef9-9d6e2760fe70}">
      <Implementation>
        <ST><![CDATA[fbP1RFID(sName:= 'P1 RFID');]]></ST>
      </Implementation>
    </Action>
    <Action Name="Servo" Id="{dcbbb598-b6a2-44d3-9d13-7dbfb1fcdc76}">
      <Implementation>
        <ST><![CDATA[fbP1AxisX.lrNegLimit := 0;
fbP1AxisX.lrPosLimit := 390;
fbP1AxisX.bEnableNegative := TRUE;
fbP1AxisX.bEnablePositive := TRUE;

fbP1AxisX(
	sName:= 'Axis X', 
	bEMYOK:= i_bDoorOK AND NOT i_bAX5805ErrorX, 
	bErrorAck:= bAckP, 
	bDisableManualCmd:= NOT bManualMode, 
	bBufferedMove:= FALSE,
	rVelocityJog := 10, 
	stAxisEvent:= TC_EVENTS.MyEvent.fbP1AxisX
);

fbP1AxisY.lrNegLimit := 0;
fbP1AxisY.lrPosLimit := 290;
fbP1AxisY.bEnableNegative := TRUE;
fbP1AxisY.bEnablePositive := TRUE;

fbP1AxisY(
	sName:= 'Axis Y', 
	bEMYOK:= i_bDoorOK AND NOT i_bAX5805ErrorY, 
	bErrorAck:= bAckP, 
	bDisableManualCmd:= NOT bManualMode, 
	bBufferedMove:= FALSE, 
	rVelocityJog := 10, 
	stAxisEvent:= TC_EVENTS.MyEvent.fbP1AxisY
);

fbP1AxisZ.lrNegLimit := 0;
fbP1AxisZ.lrPosLimit := 100;
fbP1AxisZ.bEnableNegative := TRUE;
fbP1AxisZ.bEnablePositive := TRUE;

fbP1AxisZ(
	sName:= 'Axis Z', 
	bEMYOK:= i_bDoorOK AND NOT i_bAX5805ErrorZ, 
	bErrorAck:= bAckP, 
	bDisableManualCmd:= NOT bManualMode, 
	bBufferedMove:= FALSE, 
	rVelocityJog := 10, 
	stAxisEvent:= TC_EVENTS.MyEvent.fbP1AxisZ
);]]></ST>
      </Implementation>
    </Action>
    <LineIds Name="P1_Camera">
      <LineId Id="9" Count="0" />
      <LineId Id="12" Count="3" />
      <LineId Id="916" Count="0" />
      <LineId Id="915" Count="0" />
      <LineId Id="17" Count="12" />
      <LineId Id="362" Count="0" />
      <LineId Id="340" Count="1" />
      <LineId Id="1531" Count="1" />
      <LineId Id="39" Count="5" />
      <LineId Id="701" Count="0" />
      <LineId Id="45" Count="9" />
      <LineId Id="702" Count="0" />
      <LineId Id="55" Count="14" />
      <LineId Id="712" Count="0" />
      <LineId Id="70" Count="0" />
      <LineId Id="334" Count="1" />
      <LineId Id="1529" Count="1" />
      <LineId Id="72" Count="0" />
      <LineId Id="360" Count="0" />
      <LineId Id="82" Count="1" />
      <LineId Id="86" Count="6" />
      <LineId Id="102" Count="1" />
      <LineId Id="95" Count="3" />
      <LineId Id="5" Count="0" />
      <LineId Id="104" Count="0" />
      <LineId Id="317" Count="1" />
      <LineId Id="331" Count="2" />
      <LineId Id="319" Count="11" />
      <LineId Id="186" Count="33" />
      <LineId Id="1486" Count="20" />
      <LineId Id="1484" Count="0" />
      <LineId Id="220" Count="0" />
      <LineId Id="1507" Count="21" />
      <LineId Id="232" Count="10" />
      <LineId Id="1360" Count="5" />
      <LineId Id="1270" Count="0" />
      <LineId Id="245" Count="0" />
      <LineId Id="710" Count="0" />
      <LineId Id="247" Count="1" />
      <LineId Id="343" Count="0" />
      <LineId Id="346" Count="0" />
      <LineId Id="897" Count="0" />
      <LineId Id="345" Count="0" />
      <LineId Id="344" Count="0" />
      <LineId Id="1255" Count="0" />
      <LineId Id="349" Count="0" />
      <LineId Id="351" Count="0" />
      <LineId Id="350" Count="0" />
      <LineId Id="719" Count="0" />
      <LineId Id="366" Count="0" />
      <LineId Id="368" Count="0" />
      <LineId Id="367" Count="0" />
      <LineId Id="365" Count="0" />
      <LineId Id="364" Count="0" />
      <LineId Id="374" Count="1" />
      <LineId Id="383" Count="0" />
      <LineId Id="379" Count="0" />
      <LineId Id="720" Count="0" />
      <LineId Id="381" Count="1" />
      <LineId Id="386" Count="0" />
      <LineId Id="370" Count="0" />
      <LineId Id="393" Count="1" />
      <LineId Id="400" Count="0" />
      <LineId Id="410" Count="1" />
      <LineId Id="413" Count="0" />
      <LineId Id="936" Count="0" />
      <LineId Id="1349" Count="0" />
      <LineId Id="1338" Count="10" />
      <LineId Id="1336" Count="0" />
      <LineId Id="414" Count="0" />
      <LineId Id="412" Count="0" />
      <LineId Id="408" Count="0" />
      <LineId Id="424" Count="2" />
      <LineId Id="417" Count="2" />
      <LineId Id="1228" Count="0" />
      <LineId Id="1203" Count="0" />
      <LineId Id="1229" Count="0" />
      <LineId Id="421" Count="1" />
      <LineId Id="428" Count="1" />
      <LineId Id="431" Count="5" />
      <LineId Id="403" Count="0" />
      <LineId Id="437" Count="2" />
      <LineId Id="402" Count="0" />
      <LineId Id="440" Count="6" />
      <LineId Id="448" Count="0" />
      <LineId Id="450" Count="2" />
      <LineId Id="447" Count="0" />
      <LineId Id="372" Count="0" />
      <LineId Id="1256" Count="0" />
      <LineId Id="373" Count="0" />
      <LineId Id="1368" Count="0" />
      <LineId Id="1384" Count="0" />
      <LineId Id="1369" Count="0" />
      <LineId Id="1385" Count="2" />
      <LineId Id="1398" Count="1" />
      <LineId Id="1433" Count="0" />
      <LineId Id="1388" Count="9" />
      <LineId Id="1379" Count="0" />
      <LineId Id="1416" Count="0" />
      <LineId Id="1370" Count="0" />
      <LineId Id="1400" Count="3" />
      <LineId Id="1406" Count="9" />
      <LineId Id="1380" Count="0" />
      <LineId Id="1417" Count="4" />
      <LineId Id="1457" Count="0" />
      <LineId Id="1422" Count="10" />
      <LineId Id="1434" Count="0" />
      <LineId Id="1381" Count="0" />
      <LineId Id="1437" Count="1" />
      <LineId Id="1447" Count="0" />
      <LineId Id="1440" Count="6" />
      <LineId Id="1382" Count="0" />
      <LineId Id="1448" Count="0" />
      <LineId Id="1383" Count="0" />
      <LineId Id="1449" Count="0" />
      <LineId Id="1436" Count="0" />
      <LineId Id="1435" Count="0" />
      <LineId Id="298" Count="0" />
      <LineId Id="293" Count="0" />
      <LineId Id="1107" Count="1" />
      <LineId Id="1114" Count="1" />
      <LineId Id="1123" Count="0" />
      <LineId Id="1121" Count="0" />
      <LineId Id="1112" Count="0" />
      <LineId Id="1126" Count="2" />
      <LineId Id="1230" Count="0" />
      <LineId Id="1129" Count="0" />
      <LineId Id="1124" Count="1" />
      <LineId Id="1113" Count="0" />
      <LineId Id="1321" Count="0" />
      <LineId Id="844" Count="0" />
      <LineId Id="1132" Count="4" />
      <LineId Id="1161" Count="0" />
      <LineId Id="1204" Count="0" />
      <LineId Id="1231" Count="0" />
      <LineId Id="1162" Count="5" />
      <LineId Id="1160" Count="0" />
      <LineId Id="1140" Count="0" />
      <LineId Id="1139" Count="0" />
      <LineId Id="1130" Count="0" />
      <LineId Id="1302" Count="0" />
      <LineId Id="1323" Count="0" />
      <LineId Id="1303" Count="0" />
      <LineId Id="1458" Count="0" />
      <LineId Id="1460" Count="3" />
      <LineId Id="1451" Count="0" />
      <LineId Id="1320" Count="0" />
      <LineId Id="299" Count="0" />
      <LineId Id="296" Count="0" />
      <LineId Id="733" Count="1" />
      <LineId Id="730" Count="0" />
      <LineId Id="738" Count="0" />
      <LineId Id="732" Count="0" />
      <LineId Id="457" Count="0" />
      <LineId Id="737" Count="0" />
      <LineId Id="740" Count="0" />
      <LineId Id="871" Count="1" />
      <LineId Id="1238" Count="0" />
      <LineId Id="874" Count="1" />
      <LineId Id="877" Count="0" />
      <LineId Id="1239" Count="0" />
      <LineId Id="1244" Count="0" />
      <LineId Id="1246" Count="0" />
      <LineId Id="1245" Count="0" />
      <LineId Id="1243" Count="0" />
      <LineId Id="1240" Count="0" />
      <LineId Id="878" Count="0" />
      <LineId Id="870" Count="0" />
      <LineId Id="741" Count="4" />
      <LineId Id="763" Count="0" />
      <LineId Id="965" Count="0" />
      <LineId Id="746" Count="1" />
      <LineId Id="739" Count="0" />
      <LineId Id="879" Count="0" />
      <LineId Id="882" Count="1" />
      <LineId Id="1180" Count="0" />
      <LineId Id="884" Count="2" />
      <LineId Id="1181" Count="0" />
      <LineId Id="1186" Count="1" />
      <LineId Id="1232" Count="0" />
      <LineId Id="1205" Count="0" />
      <LineId Id="1188" Count="5" />
      <LineId Id="1182" Count="1" />
      <LineId Id="887" Count="0" />
      <LineId Id="880" Count="0" />
      <LineId Id="458" Count="0" />
      <LineId Id="310" Count="0" />
      <LineId Id="306" Count="0" />
      <LineId Id="309" Count="0" />
      <LineId Id="307" Count="0" />
      <LineId Id="460" Count="5" />
      <LineId Id="308" Count="0" />
      <LineId Id="466" Count="0" />
      <LineId Id="470" Count="0" />
      <LineId Id="753" Count="1" />
      <LineId Id="1545" Count="3" />
      <LineId Id="752" Count="0" />
      <LineId Id="761" Count="1" />
      <LineId Id="757" Count="0" />
      <LineId Id="515" Count="0" />
      <LineId Id="495" Count="0" />
      <LineId Id="498" Count="0" />
      <LineId Id="537" Count="0" />
      <LineId Id="1533" Count="1" />
      <LineId Id="500" Count="1" />
      <LineId Id="538" Count="0" />
      <LineId Id="1535" Count="1" />
      <LineId Id="503" Count="2" />
      <LineId Id="539" Count="0" />
      <LineId Id="639" Count="0" />
      <LineId Id="591" Count="0" />
      <LineId Id="488" Count="1" />
      <LineId Id="485" Count="1" />
      <LineId Id="473" Count="0" />
      <LineId Id="582" Count="0" />
      <LineId Id="594" Count="0" />
      <LineId Id="1199" Count="0" />
      <LineId Id="1225" Count="0" />
      <LineId Id="597" Count="0" />
      <LineId Id="1082" Count="0" />
      <LineId Id="1234" Count="0" />
      <LineId Id="1206" Count="0" />
      <LineId Id="1143" Count="0" />
      <LineId Id="1142" Count="0" />
      <LineId Id="967" Count="0" />
      <LineId Id="969" Count="0" />
      <LineId Id="1146" Count="0" />
      <LineId Id="977" Count="0" />
      <LineId Id="1200" Count="0" />
      <LineId Id="588" Count="0" />
      <LineId Id="606" Count="1" />
      <LineId Id="1196" Count="0" />
      <LineId Id="640" Count="0" />
      <LineId Id="474" Count="0" />
      <LineId Id="1076" Count="0" />
      <LineId Id="1466" Count="0" />
      <LineId Id="770" Count="0" />
      <LineId Id="1468" Count="0" />
      <LineId Id="1470" Count="0" />
      <LineId Id="1469" Count="0" />
      <LineId Id="771" Count="0" />
      <LineId Id="475" Count="0" />
      <LineId Id="580" Count="0" />
      <LineId Id="772" Count="0" />
      <LineId Id="1014" Count="2" />
      <LineId Id="1031" Count="0" />
      <LineId Id="1027" Count="3" />
      <LineId Id="1020" Count="0" />
      <LineId Id="1168" Count="0" />
      <LineId Id="1170" Count="1" />
      <LineId Id="1169" Count="0" />
      <LineId Id="1033" Count="0" />
      <LineId Id="1077" Count="0" />
      <LineId Id="1022" Count="0" />
      <LineId Id="1036" Count="0" />
      <LineId Id="1084" Count="0" />
      <LineId Id="1152" Count="2" />
      <LineId Id="1156" Count="0" />
      <LineId Id="1215" Count="1" />
      <LineId Id="1157" Count="0" />
      <LineId Id="1159" Count="0" />
      <LineId Id="1147" Count="0" />
      <LineId Id="1236" Count="1" />
      <LineId Id="1086" Count="0" />
      <LineId Id="1079" Count="1" />
      <LineId Id="1065" Count="6" />
      <LineId Id="1073" Count="0" />
      <LineId Id="1087" Count="0" />
      <LineId Id="1471" Count="0" />
      <LineId Id="1074" Count="0" />
      <LineId Id="1475" Count="0" />
      <LineId Id="1474" Count="0" />
      <LineId Id="1473" Count="0" />
      <LineId Id="1075" Count="0" />
      <LineId Id="1058" Count="0" />
      <LineId Id="1025" Count="0" />
      <LineId Id="1059" Count="0" />
      <LineId Id="1017" Count="0" />
      <LineId Id="990" Count="0" />
      <LineId Id="1039" Count="16" />
      <LineId Id="478" Count="0" />
      <LineId Id="609" Count="1" />
      <LineId Id="1537" Count="3" />
      <LineId Id="613" Count="1" />
      <LineId Id="1541" Count="1" />
      <LineId Id="616" Count="2" />
      <LineId Id="1543" Count="1" />
      <LineId Id="620" Count="0" />
      <LineId Id="467" Count="1" />
      <LineId Id="629" Count="5" />
      <LineId Id="905" Count="0" />
      <LineId Id="636" Count="0" />
      <LineId Id="628" Count="0" />
      <LineId Id="1088" Count="0" />
      <LineId Id="648" Count="0" />
      <LineId Id="1226" Count="0" />
      <LineId Id="304" Count="0" />
      <LineId Id="1227" Count="0" />
      <LineId Id="1257" Count="0" />
      <LineId Id="1089" Count="0" />
      <LineId Id="312" Count="0" />
      <LineId Id="110" Count="0" />
      <LineId Id="657" Count="4" />
      <LineId Id="652" Count="0" />
      <LineId Id="662" Count="2" />
      <LineId Id="111" Count="0" />
      <LineId Id="249" Count="2" />
      <LineId Id="262" Count="1" />
      <LineId Id="268" Count="4" />
      <LineId Id="638" Count="0" />
      <LineId Id="275" Count="10" />
      <LineId Id="288" Count="3" />
      <LineId Id="112" Count="2" />
    </LineIds>
    <LineIds Name="P1_Camera.Camera">
      <LineId Id="19" Count="4" />
      <LineId Id="26" Count="4" />
      <LineId Id="32" Count="3" />
      <LineId Id="18" Count="0" />
      <LineId Id="37" Count="0" />
    </LineIds>
    <LineIds Name="P1_Camera.DataExchange">
      <LineId Id="51" Count="4" />
      <LineId Id="26" Count="0" />
    </LineIds>
    <LineIds Name="P1_Camera.Diag">
      <LineId Id="1" Count="5" />
    </LineIds>
    <LineIds Name="P1_Camera.MES">
      <LineId Id="18" Count="13" />
      <LineId Id="17" Count="0" />
    </LineIds>
    <LineIds Name="P1_Camera.Pneu">
      <LineId Id="2" Count="0" />
      <LineId Id="25" Count="8" />
      <LineId Id="61" Count="1" />
    </LineIds>
    <LineIds Name="P1_Camera.Recipe">
      <LineId Id="2" Count="52" />
      <LineId Id="1" Count="0" />
    </LineIds>
    <LineIds Name="P1_Camera.RFID">
      <LineId Id="2" Count="0" />
    </LineIds>
    <LineIds Name="P1_Camera.Servo">
      <LineId Id="44" Count="1" />
      <LineId Id="28" Count="1" />
      <LineId Id="27" Count="0" />
      <LineId Id="2" Count="4" />
      <LineId Id="9" Count="0" />
      <LineId Id="50" Count="0" />
      <LineId Id="21" Count="0" />
      <LineId Id="30" Count="0" />
      <LineId Id="47" Count="2" />
      <LineId Id="33" Count="9" />
      <LineId Id="51" Count="0" />
      <LineId Id="31" Count="0" />
      <LineId Id="53" Count="13" />
      <LineId Id="52" Count="0" />
    </LineIds>
  </POU>
</TcPlcObject>